rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if admin setup is needed
    function needsAdminSetup() {
      return !exists(/databases/$(database)/documents/settings/adminSetup);
    }

    // Users collection
    match /users/{userId} {
      // Allow read if user is logged in and accessing their own data or is admin
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      
      // Allow create if authenticated and creating own document
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow update/delete if admin
      allow update, delete: if isAdmin();
    }

    // Settings collection
    match /settings/{document} {
      // Allow read for everyone
      allow read: if true;
      
      // Allow write if authenticated
      allow write: if request.auth != null;
    }

    // Other collections - public read, admin write
    match /{collection=**}/{document} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
} 